name: 📝 Knowledge Automation

# トリガー: PRコメントが投稿されたとき
on:
  issue_comment:
    types: [created]

# 権限設定
permissions:
  contents: write
  pull-requests: read
  issues: write

jobs:
  process-must-comment:
    # 実行条件:
    # 1. PRに紐づくコメントであること
    # 2. コメント本文が[must]で始まること
    if: |
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '[must]')

    runs-on: ubuntu-latest

    steps:
      # Step 1: リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # PRのブランチをチェックアウト
          ref: ${{ github.event.issue.pull_request.head.ref }}
          # プッシュするためにトークンを設定
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Node.js環境をセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      # Step 3: 依存関係をインストール
      - name: Install dependencies
        run: npm ci

      # Step 4: PRの詳細情報を取得
      - name: Get PR details
        id: pr-details
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return {
              branch: pr.data.head.ref
            };

      # Step 5: Mastraアプリケーションを実行
      - name: Run Knowledge Automation
        run: npm run mastra:run
        env:
          # GitHub Secretsから取得
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # イベントペイロードから抽出
          COMMENT_BODY: ${{ github.event.comment.body }}
          COMMENT_URL: ${{ github.event.comment.html_url }}
          PR_BRANCH: ${{ fromJSON(steps.pr-details.outputs.result).branch }}
          TIMESTAMP: ${{ github.event.comment.created_at }}
          # Git操作用
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
