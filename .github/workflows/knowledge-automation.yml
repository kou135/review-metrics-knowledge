name: 📝 Knowledge Automation

# トリガー: PRコメントまたはレビューコメントが投稿されたとき
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

# 権限設定
permissions:
  contents: write
  pull-requests: read
  issues: write

jobs:
  process-must-comment:
    # 実行条件:
    # 1. issue_comment: PRに紐づくコメントで[must]で始まること
    # 2. pull_request_review_comment: レビューコメントで[must]で始まること
    if: |
      (github.event_name == 'issue_comment' && github.event.issue.pull_request && startsWith(github.event.comment.body, '[must]')) ||
      (github.event_name == 'pull_request_review_comment' && startsWith(github.event.comment.body, '[must]'))

    runs-on: ubuntu-latest

    steps:
      # Step 1: PRブランチ情報を取得
      - name: Get PR branch
        id: pr-branch
        uses: actions/github-script@v7
        with:
          script: |
            let branch;

            if (context.eventName === 'issue_comment') {
              // issue_comment: API経由でPR情報を取得
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });
              branch = pr.data.head.ref;
            } else if (context.eventName === 'pull_request_review_comment') {
              // pull_request_review_comment: イベントペイロードから直接取得
              branch = context.payload.pull_request.head.ref;
            }

            return { branch };

      # Step 2: リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # PRのブランチをチェックアウト
          ref: ${{ fromJSON(steps.pr-branch.outputs.result).branch }}
          # プッシュするためにトークンを設定
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Node.js環境をセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      # Step 4: 依存関係をインストール
      - name: Install dependencies
        run: npm ci

      # Step 5: Mastraアプリケーションを実行
      - name: Run Knowledge Automation
        run: npm run mastra:run
        env:
          # GitHub Secretsから取得
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # イベントペイロードから抽出（両イベントで同じ構造）
          COMMENT_BODY: ${{ github.event.comment.body }}
          COMMENT_URL: ${{ github.event.comment.html_url }}
          PR_BRANCH: ${{ fromJSON(steps.pr-branch.outputs.result).branch }}
          TIMESTAMP: ${{ github.event.comment.created_at }}
          # Git操作用
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
